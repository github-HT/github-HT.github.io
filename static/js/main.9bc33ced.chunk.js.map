{"version":3,"sources":["logo.svg","assets/imgs/mapImg.png","pages/home/Home.js","App.js","reportWebVitals.js","store/reducers/HomeReducer.js","store/index.js","index.js"],"names":["CardList","title","subTitle","imgUrl","mapImg","url","connect","state","link","Home","Meta","Card","gutter","xs","sm","md","lg","map","item","i","onClick","e","location","href","hoverable","style","width","cover","alt","src","description","Content","Layout","Header","Footer","App","history","createBrowserHistory","className","padding","marginTop","minHeight","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HomeState","reducers","combineReducers","Store","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"4LAAe,I,uCCAA,MAA0B,mC,QCMnCA,EAAW,CAAC,CAChBC,MAAO,eACPC,SAAU,yDACVC,OAAQC,EACRC,IAAK,oCAEP,CACEJ,MAAO,6CACPC,SAAU,iFACVC,OAAQ,yEACRE,IAAK,iDAQA,IAkCQC,eARS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAME,KAAKD,QAGQ,GAIZF,EAlCK,SAAC,GAAa,EAAXE,KAAY,IACzBE,EAASC,IAATD,KACR,OACE,cAAC,IAAD,CAAKE,OAAQ,CAAC,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAM,CAAEH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,KAA9E,SACGhB,EAASiB,KAAI,SAACC,EAAMC,GACnB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,QAAS,SAAAC,GAAC,OAbRhB,EAamBa,EAAKb,SAXtCiB,SAASC,KAAOlB,GAFlB,IAAgBA,GAcFmB,WAAS,EACTC,MAAO,CAAEC,MAAO,KAChBC,MAAO,qBAAKC,IAAI,UAAUC,IAAKX,EAAKf,SAJtC,SAME,cAACO,EAAD,CAAMT,MAAOiB,EAAKjB,MAAO6B,YAAaZ,EAAKhB,cAPrC,WAAaiB,W,iBCtBjBY,GAAoBC,IAA5BC,OAA4BD,IAApBD,SAAoBC,IAAXE,OAuBVC,MArBf,WACE,IAAMC,EAAUC,cAChB,OAEE,cAAC,IAAD,UAIE,cAACN,EAAD,CAASO,UAAU,cAAcb,MAAO,CAAEc,QAAS,SAAUC,UAAW,IAAxE,SACE,qBAAKF,UAAU,yBAAyBb,MAAO,CAAEc,QAAS,GAAIE,UAAW,KAAzE,SACE,cAAC,IAAD,CAAQL,QAASA,EAAjB,SACE,cAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWlC,aCTxBmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPRQ,EAAY,CAChB7C,KAAM,QCER,IAAM8C,EAAWC,YAAgB,CAC/B9C,KDAa,WAAiD,IAA5BF,EAA2B,uDAAnB8C,EAC1C,OAAO9C,KCEMiD,EADDC,YAAYH,GCE1BI,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,CAAUC,MAAOJ,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BlB,K","file":"static/js/main.9bc33ced.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/mapImg.86050d47.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Card, Col, Row } from 'antd'\nimport mapImg from '../../assets/imgs/mapImg.png'\n\nconst CardList = [{\n  title: \"地图\",\n  subTitle: \"就是一个地图页面！\",\n  imgUrl: mapImg,\n  url: \"https://github-ht.github.io/map/\"\n},\n{\n  title: \"双色球随机取号\",\n  subTitle: \"就是随机取号，没有其他的！\",\n  imgUrl: \"https://github-ht.github.io/doubleColorBall/image/dounleColorBall.jpeg\",\n  url: \"https://github-ht.github.io/doubleColorBall/\"\n}]\n\nfunction linkTo(url) {\n  // window.open(url);\n  location.href = url;\n}\n\nexport const Home = ({ link }) => {\n  const { Meta } = Card;\n  return (\n    <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, { xs: 8, sm: 16, md: 24, lg: 32 }]}>\n      {CardList.map((item, i) => {\n        return (\n          <Col key={'CardList' + i}>\n            <Card\n              onClick={e => linkTo(item.url)}\n              hoverable\n              style={{ width: 240 }}\n              cover={<img alt=\"example\" src={item.imgUrl} />}\n            >\n              <Meta title={item.title} description={item.subTitle} />\n            </Card>\n          </Col>\n        )\n      })}\n    </Row>\n  )\n}\n\nHome.propTypes = {\n  link: PropTypes.string\n}\n\nconst mapStateToProps = (state) => ({\n  link: state.Home.link\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import * as React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Router, Route } from 'react-router';\nimport Home from './pages/home/Home';\nimport { createBrowserHistory } from 'history';\nimport { Layout, Menu, Breadcrumb } from 'antd';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const history = createBrowserHistory()\n  return (\n\n    <Layout>\n      {/* <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n        <div className=\"logo\" />\n      </Header> */}\n      <Content className=\"site-layout\" style={{ padding: '0 50px', marginTop: 64 }}>\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 380 }}>\n          <Router history={history}>\n            <Route path=\"/\" component={Home} />\n          </Router>\n        </div>\n      </Content>\n      {/* <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer> */}\n    </Layout>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const HomeState = {\n  link: 'link',\n};\n\nexport default function HomeReducer(state = HomeState, action) {\n  return state;\n}\n","import { combineReducers, createStore } from 'redux';\nimport HomeReducer from './reducers/HomeReducer';\n\nconst reducers = combineReducers({\n  Home: HomeReducer,\n});\nconst Store = createStore(reducers);\nexport default Store;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}